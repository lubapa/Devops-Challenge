name: Deploy Infrastructure 


on:
  push:  
    branches:
      - infra_test
    paths:
      - 'infrastructure/**'
  workflow_dispatch:

jobs:
 
  terraform:
    name: Deploy Infrastructure with Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Create temporary tfvars file
        run: |
          echo "container_name=${{ github.repository }}-${{ env.GIT_BRANCH }}-${{ env.GIT_SHA }}" > ./infrastructure/terraform.tfvars
          echo "container_image=ghcr.io/${{ secrets.GHCR_USERNAME }}/${{ github.repository }}:${{ env.GIT_BRANCH }}-${{ env.GIT_SHA }}" >> ./infrastructure/terraform.tfvars

      - name: Set environment variables
        run: |
          echo "CONTAINER_NAME=${{ github.repository }}-${{ env.GIT_BRANCH }}-${{ env.GIT_SHA }}" >> $GITHUB_ENV
          echo "CONTAINER_IMAGE=ghcr.io/${{ secrets.GHCR_USERNAME }}/${{ github.repository }}:${{ env.GIT_BRANCH }}-${{ env.GIT_SHA }}" >> $GITHUB_ENV

      - name: Initialize Terraform
        working-directory: ./infrastructure
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          GIT_BRANCH: ${{ env.GIT_BRANCH }}
          GIT_SHA: ${{ env.GIT_SHA }}
        run: terraform init

      - name: Validate Terraform
        working-directory: ./infrastructure
        env:
          GIT_BRANCH: ${{ env.GIT_BRANCH }}
          GIT_SHA: ${{ env.GIT_SHA }}
        run: terraform validate

      - name: Plan Terraform
        working-directory: ./infrastructure
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          GIT_BRANCH: ${{ env.GIT_BRANCH }}
          GIT_SHA: ${{ env.GIT_SHA }}
        run: terraform plan -var="container_name=${CONTAINER_NAME}" -var="container_image=${CONTAINER_IMAGE}" -out=tfplan-${{ env.GIT_SHA }}

      - name: Remove temporary tfvars file
        run: rm ./infrastructure/terraform.tfvars

      - name: Apply Terraform
        if: github.event_name == 'workflow_dispatch'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply -auto-approve tfplan-${{ env.GIT_SHA }}

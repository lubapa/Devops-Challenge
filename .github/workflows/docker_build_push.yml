name: Build & Push Docker Image

on:
  push:
    branches:
      - infra_test
    paths:
      - 'application/**'

jobs:

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        env:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: Extract Git commit short SHA
        id: vars
        run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build Docker Image
        run: docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/${{ github.repository }}:${{ github.ref_name }}-${{ env.GIT_SHA }} ./application

      - name: Push Docker Image to GitHub Container Registry
        run: |
          docker tag ghcr.io/${{ secrets.GHCR_USERNAME }}/${{ github.repository }}:${{ github.ref_name }}-${{ env.GIT_SHA }} ghcr.io/${{ secrets.GHCR_USERNAME }}/${{ github.repository }}:latest

          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/${{ github.repository }}:${{ github.ref_name }}-${{ env.GIT_SHA }}
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/${{ github.repository }}:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      
      - name: Deploy to ECS
        if: github.ref == 'refs/heads/infra_test' || github.ref == 'refs/heads/develop'
        run: |
          aws ecs update-service --cluster helloworld-cluster-${{ github.ref_name }} --service helloworld-service-${{ github.ref_name }} --force-new-deployment
          aws ecs wait services-stable --cluster helloworld-cluster-${{ github.ref_name }} --services helloworld-service-${{ github.ref_name }}

      - name: Get ALB DNS
        if: github.ref == 'refs/heads/infra_test' || github.ref == 'refs/heads/develop'
        id: get-alb-dns
        run: |
            # ALB_NAME_PATTERN="*-${{ github.ref_name }}"
            ALB_NAME_PATTERN="*-alb*"
            ALB_DNS=$(aws elbv2 describe-load-balancers --query "LoadBalancers[?contains(LoadBalancername, \`${ALB_NAME_PATTERN}\`)].DNSName" --output text)
            echo "ALB DNS Name: $ALB_DNS"
            echo "ALB_DNS_NAME=$ALB_DNS" >> $GITHUB_ENV
      
      - name: Notify Deployment
        if: github.ref == 'refs/heads/infra_test' || github.ref == 'refs/heads/develop'
        run: |
            echo "Deployment complete. The DNS of the ALB is ${{ env.ALB_DNS_NAME }}"